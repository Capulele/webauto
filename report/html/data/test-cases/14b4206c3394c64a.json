{"uid":"14b4206c3394c64a","name":"test_01_login[admin1-11111111-登录失败]","fullName":"testcases.test_user_manager.test_login.TestLogin#test_01_login","historyId":"3e5201c0d1db86d6ec0dd9d1c299504c","time":{"start":1675071063028,"stop":1675071082589,"duration":19561},"status":"broken","statusMessage":"FileNotFoundError: [Errno 2] No such file or directory: './report/screenshot/houseinfofail.png'","statusTrace":"self = <test_login.TestLogin object at 0x000002587EA74490>, username = 'admin1'\npassword = 11111111, except_res = '登录失败'\n\n    @allure.story('登录功能验证')\n    @pytest.mark.parametrize('username,password,except_res' , load_user_yaml(userdata_path))\n    def test_01_login(self , username , password , except_res):\n    \tdriver=BasePage().driver\n    \tload_log().info('测试用户名{},密码{}'.format(username , password))\n    \tresult = UserLogin().userlogin(username , password)\n    \twith allure.step('执行断言'):\n    \t\t\tassert result == except_res\n    \t\t\tload_log().info('实际结果\"{}\"与预期结果\"{}\"一致'.format(result , except_res))\n    \t\t\tdriver.save_screenshot('./report/screenshot/houseinfofail.png')\n>   \t\t\tallure.attach.file('./report/screenshot/houseinfofail.png',attachment_type = allure.attachment_type.PNG)\n\ntestcases\\test_user_manager\\test_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\allure_commons\\_allure.py:203: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nvenv\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nvenv\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv\\lib\\site-packages\\allure_pytest\\listener.py:233: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nvenv\\lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nvenv\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nvenv\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nD:\\Program Files\\python3.10\\lib\\shutil.py:434: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = './report/screenshot/houseinfofail.png'\ndst = 'D:\\\\desktop\\\\web自动化\\\\report\\\\result\\\\f0641e99-651a-4e18-85a8-64c02115d33b-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: './report/screenshot/houseinfofail.png'\n\nD:\\Program Files\\python3.10\\lib\\shutil.py:254: FileNotFoundError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"FileNotFoundError: [Errno 2] No such file or directory: './report/screenshot/houseinfofail.png'","statusTrace":"self = <test_login.TestLogin object at 0x000002587EA74490>, username = 'admin1'\npassword = 11111111, except_res = '登录失败'\n\n    @allure.story('登录功能验证')\n    @pytest.mark.parametrize('username,password,except_res' , load_user_yaml(userdata_path))\n    def test_01_login(self , username , password , except_res):\n    \tdriver=BasePage().driver\n    \tload_log().info('测试用户名{},密码{}'.format(username , password))\n    \tresult = UserLogin().userlogin(username , password)\n    \twith allure.step('执行断言'):\n    \t\t\tassert result == except_res\n    \t\t\tload_log().info('实际结果\"{}\"与预期结果\"{}\"一致'.format(result , except_res))\n    \t\t\tdriver.save_screenshot('./report/screenshot/houseinfofail.png')\n>   \t\t\tallure.attach.file('./report/screenshot/houseinfofail.png',attachment_type = allure.attachment_type.PNG)\n\ntestcases\\test_user_manager\\test_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\allure_commons\\_allure.py:203: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nvenv\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nvenv\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv\\lib\\site-packages\\allure_pytest\\listener.py:233: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nvenv\\lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nvenv\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nvenv\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nD:\\Program Files\\python3.10\\lib\\shutil.py:434: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = './report/screenshot/houseinfofail.png'\ndst = 'D:\\\\desktop\\\\web自动化\\\\report\\\\result\\\\f0641e99-651a-4e18-85a8-64c02115d33b-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: './report/screenshot/houseinfofail.png'\n\nD:\\Program Files\\python3.10\\lib\\shutil.py:254: FileNotFoundError","steps":[{"name":"执行断言","time":{"start":1675071082131,"stop":1675071082589,"duration":458},"status":"broken","statusMessage":"FileNotFoundError: [Errno 2] No such file or directory: './report/screenshot/houseinfofail.png'\n","statusTrace":"  File \"D:\\desktop\\web自动化\\testcases\\test_user_manager\\test_login.py\", line 23, in test_01_login\n    allure.attach.file('./report/screenshot/houseinfofail.png',attachment_type = allure.attachment_type.PNG)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 203, in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_hooks.py\", line 265, in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_manager.py\", line 80, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 60, in _multicall\n    return outcome.get_result()\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_result.py\", line 60, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\allure_pytest\\listener.py\", line 233, in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\allure_commons\\reporter.py\", line 160, in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_hooks.py\", line 265, in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_manager.py\", line 80, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 60, in _multicall\n    return outcome.get_result()\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_result.py\", line 60, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\desktop\\web自动化\\venv\\lib\\site-packages\\allure_commons\\logger.py\", line 53, in report_attached_file\n    shutil.copy2(source, destination)\n  File \"D:\\Program Files\\python3.10\\lib\\shutil.py\", line 434, in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n  File \"D:\\Program Files\\python3.10\\lib\\shutil.py\", line 254, in copyfile\n    with open(src, 'rb') as fsrc:\n","steps":[],"attachments":[{"type":"image/png","size":0}],"parameters":[],"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1}],"attachments":[{"uid":"ee457769645c071f","name":"log","source":"ee457769645c071f.txt","type":"text/plain","size":158}],"parameters":[],"hasContent":true,"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"story","value":"登录功能验证"},{"name":"feature","value":"登录功能"},{"name":"parentSuite","value":"testcases.test_user_manager"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"Capulele"},{"name":"thread","value":"16644-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_user_manager.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"except_res","value":"'登录失败'"},{"name":"password","value":"11111111"},{"name":"username","value":"'admin1'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"14b4206c3394c64a.json","parameterValues":["'登录失败'","11111111","'admin1'"]}